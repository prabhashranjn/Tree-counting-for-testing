# -*- coding: utf-8 -*-
"""Main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17dO4u78Ex6rXbuxeifZEjKa9-6ZZYWVk
"""

import matplotlib.pyplot as plt
import earthpy.plot as ep
import numpy as np
from utils import *
from unet_model import *
import sys
import os
import warnings
import datetime
if not sys.warnoptions:
    warnings.simplefilter('ignore')
    
os.environ["CUDA_VISIBLE_DEVICES"]="0"

"""## 1. Load and Preprocess Dataset"""

X_DICT_TRAIN, Y_DICT_TRAIN, X_DICT_VALIDATION, Y_DICT_VALIDATION = load_data(path = 'data')

plot_train_data(X_DICT_TRAIN, Y_DICT_TRAIN, image_number = 1)

N_BANDS = 8
N_CLASSES = 1  # buildings, roads, trees, crops and water
N_EPOCHS = 10
PATCH_SZ = 160   # should divide by 16
BATCH_SIZE = 100
TRAIN_SZ = 5000  # train size
VAL_SZ = 500    # validation size
channel='all'   #  0: Buildings , 1: Roads & Tracks, 2: Trees , 3: Crops, 4: Water or 'all'

x_train, y_train = get_patches(X_DICT_TRAIN, Y_DICT_TRAIN, n_patches=TRAIN_SZ, sz=PATCH_SZ, channel=channel)
x_val, y_val = get_patches(X_DICT_VALIDATION, Y_DICT_VALIDATION, n_patches=VAL_SZ, sz=PATCH_SZ, channel=channel)
y_train = y_train[:,:, :,2:3]
y_val = y_val[:,:, :,2:3]

print("Train shape is: {} and Train Ground truth shape is: {}".format(x_train.shape, y_train.shape))
print("Validation shape is: {} and Validation Ground truth shape is: {}".format(x_val.shape, y_val.shape))

"""## 2. Build and Train  U-net Model"""

model = unet_model( n_classes= N_CLASSES,
                    im_sz= PATCH_SZ,
                    n_channels = N_BANDS,
                    n_filters_start = 32,
                    growth_factor = 2,
                    upconv=True)

model.summary()

callbacks_list = get_callbacks()

model.fit(x_train, y_train, batch_size=BATCH_SIZE, epochs=N_EPOCHS,
          verbose=1, shuffle=True, validation_data=(x_val, y_val), callbacks=callbacks_list)

"""## 3. Load trained Model"""

model_path = "C:\Users\Prabhash\Downloads\Counting-Trees-using-Satellite-Images-main\Counting-Trees-using-Satellite-Images-main\unet_model.py"

model =  model_load(model_path)

"""## 4. Evaluate trained Model"""

y_pred = model.predict(x_val)

number = 123 #56 ,34
img = y_pred[number,:,:,:]

opened_img, number_of_objects, blob_labels = post_processing(img)
print("Number of Trees: {}".format(number_of_objects[-1]))

f, axs = plt.subplots(1,4, figsize=(23,23))

ep.plot_rgb(x_val[number,:,:,:].transpose([2,0,1]),
            rgb=[0, 1, 2],
            title="Satellite Image",
            stretch=True,
            ax=axs[0])

axs[1].imshow(y_val[number,:,:,:])
axs[1].set_title("Ground Truth")

axs[2].imshow(opened_img)
axs[2].set_title("Prediction")


axs[3].imshow(blob_labels, cmap='gist_ncar')
axs[3].set_title("Number of Trees: {}".format(number_of_objects[-1]))

f.show()

